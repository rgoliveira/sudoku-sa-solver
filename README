Copyright 2013 Ricardo Godoy de Oliveira
----------------------------------------------------------------------------
Sudoku SA Solver is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Sudoku SA Solver is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.
<http://www.gnu.org/licenses/>
----------------------------------------------------------------------------
This project is part of an assignment for the course of INF05010 (Combina-
torial Optimization) at the Informatics Institute of the Federal University
of Rio Grando do Sul (UFRGS). It's aim is to solve instances of Sudoku using
the meta-heuristic known as Simulated Annealing.
Along with this program, there should be a technical report containing the
results of the experimentation against some instances of the game, as well
as information about the meta-heuristic and algorithms used.
Also, there should be the files for solving the same instances with GLPK's 
GLPSOL, using the GNU MathProg modeling language.
----------------------------------------------------------------------------
(kinda messy) folder structure explained:
  (root)
    |---+ bin           # created after compiling, home of the compiled program
    |---+ etc           # instances and the files generated by my tests
    |---+ glpk          # files for GLPK's GLPSOL
    |---+ include       # C++ header files
    |---+ report        # technical report files (LaTeX)
    |---+ src           # source files
    |---+ tests
        |---+ results   # parsed test results
        |---+ scripts   # script used during tests (run and parse)
    |---+ tools         # tools used during the C++ implementation
    | license.txt
    | makefile
    | README
----------------------------------------------------------------------------
Instructions for compiling:
    - Under Linux: just run 'make' in the root directory.
    - Under Windows: the makefile will try to 'mkdir -p', which won't work and
      will create a '-p' folder. Just open the makefile, strip out the directory
      creation parts, make sure you create the 'bin' directory, and then run
      the makefile.
